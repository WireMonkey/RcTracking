@page "/"
@using RcTracking.Shared.Model
@using RcTracking.UI.Events
@using RcTracking.UI.Services

<PageTitle>Home</PageTitle>

<MudGrid Spacing="6" Justify="Justify.SpaceEvenly">
	<MudItem xs="6">
		<MudPaper Class="pa-4">
			<MudText Typo="Typo.h5" GutterBottom="true">Total Flights</MudText>
			@flightCount
		</MudPaper>
	</MudItem>
	<MudItem xs="6">
		<MudPaper Class="pa-4">
			<MudText Typo="Typo.h5" GutterBottom="true">This Year</MudText>
			0
		</MudPaper>
	</MudItem>
	<MudItem xs="6">
		<MudPaper Class="pa-4">
			<MudText Typo="Typo.h5" GutterBottom="true">Total Planes</MudText>
			0
		</MudPaper>
	</MudItem>
	<MudItem xs="6">
		<MudPaper Class="pa-4">
			<MudText Typo="Typo.h5" GutterBottom="true">Working Planes</MudText>
			0
		</MudPaper>
	</MudItem>
</MudGrid>

@code {

	[Inject]
	private FlightService FlightService { get; set; }

	[Inject]
	private EventBus EventBus { get; set; }

	private int flightCount { get; set; } = 0;

	protected override async Task OnInitializedAsync()
	{
		EventBus.OnMessage += OnMessage;

		await FlightService.LoadFlightsAsync();
	}

	private void OnMessage(object? sender, EventMessage? e)
	{
		Console.WriteLine($"Event received. Type: {e?.Event.ToString() ?? "none"}");

		if(e?.Event == EventEnum.RefreshFlight)
		{
			flightCount = FlightService.Flights.Count;
		}
	}
}